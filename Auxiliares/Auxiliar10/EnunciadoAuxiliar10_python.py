# -*- coding: utf-8 -*-
"""Auxiliar10_enunciado

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xw6gdD9bB504dPOoAWY-THm0934_J0Xy

#Auxiliar 10 - Archivos y Diccionarios

### P1 Lectura/Escritura de Archivos
El archivo notas.txt contiene una lista con los nombres de los estudiantes y sus respectivas notas. Cada linea del archivo corresponde a un alumno, donde primero se tiene el nombre, seguido por sus notas, separando cada valor con una coma.

Programe la función promedio, la cual a partir del archivo notas.txt genere un nuevo archivo llamado promedio_notas.txt el cual contenga los nombres y el promedio de notas de cada alumno.

Puede asumir que los datos serán entregados en un formato correcto.

### P2. Diccionarios
Para comunicarnos secretamente con nuestros amigos, vamos a crear un programa que reemplace las letras del alfabeto por otra letra del mismo. 
Para ello debemos definir un alfabeto y su sustitución.

Por ejemplo:

alfabeto = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

substitución = "QWERTYUIOPASDFGHJKLZXCVBNM"

Para los valores anteriores, tendremos que la letra A es reemplazada por la letra Q, la B por W, la C por la E y así sucesivamente.

Programaremos las siguientes funciones que nos permitirán cifrar y decifrar nuestros mensajes.

### A) 
Defina la función crearDiccionario, esta debe recibir dos strings, uno correspondiente al alfabeto y el otro a la substitución que utilizaremos. 

A partir de estos valores debe devolver un diccionario que contenga todas las letras del alfabeto con sus respectivas subtituciones.

Por ejemplo: 

alfabeto = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

substitución = "QWERTYUIOPASDFGHJKLZXCVBNM"

crearDiccionario(alfabeto, substitucion) devolverá:

{'A': 'Q', 'B': 'W', 'C': 'E', 'D': 'R', 'E': 'T',
 'F': 'Y', 'G': 'U', 'H': 'I', 'I': 'O', 'J': 'P',
 'K': 'A', 'L': 'S', 'M': 'D', 'N': 'F', 'O': 'G',
 'P': 'H', 'Q': 'J', 'R': 'K', 'S': 'L', 'T': 'Z', 
 'U': 'X', 'V': 'C', 'W': 'V', 'X': 'B', 'Y': 'N', 'Z': 'M'}

### B)
Programe la función cifrarTexto, esta recibirá un diccionario y un string correspondiente al mensaje que queremos cifrar.La función deberá devolver el mensaje cifrado a partir del diccionario que recibió. Además, si alguna de las letras del mensaje no se encuentra en el diccionario, deberá agregarlas sin substituir su valor.
 
Por ejemplo, si utilizamos el diccionario del ejemplo anterior y el texto "HOLA UWU" debemos recibir como respuesta "IGSQ XVX", además, en este caso deberíamos agregar " " al diccionario.

### P3. Iterar en un diccionario
Programe una función llamada maxReunión, esta debe busca el horario en el que más personas pueden participar de una reunión (asuma que sólo habrá un máximo). Esta función no recibe parámetros y debe retornar el valor del la maáxima cantidad de participantes. Además, debe mostrar en la pantalla el día, el horario y los participantes de la reunión con mayor asistencia.

Para lograr lo descrito, se tendrá la variable global horarios, la cual está definida a continuación. Esta contiene un diccionario con los horarios en que los participantes de la reunión confirmaron su disponibilidad.
"""

horarios={
  "lunes": {
    "mañana": ["Juan","Andrés"],
    "tarde": ["Pepito","Juan"], 
    "noche":["Anita", "Pedrito"]
  },
  "martes": {
    "mañana": ["Andrea","María"],
    "tarde": [],
    "noche":["Andrea", "Pedrito", "María"]
  },
  "miércoles":{
    "mañana": ["Pepito","Juan","Andrea","María"],
    "tarde": [],
    "noche":[]
  },
  "jueves": {
    "mañana": ["Juan","Andrés"],
    "tarde": ["Pepito","Juan","María"],
    "noche":["Pepito", "María"]
}
}